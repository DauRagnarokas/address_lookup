name: Increment App Version Build

on:
  workflow_dispatch:

jobs:
  increment_version_build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Configure git user
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "<>"

      # Fetch the default branch name
      - name: Fetch default branch name
        id: repo_info
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const repo = await github.rest.repos.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            return repo.data.default_branch;

      # Increment version build number in pubspec.yaml and form branch name
      - name: Increment version build number and form branch name
        id: versioning
        run: |
          VERSION_BUILD=$(grep 'version:' pubspec.yaml | sed 's/version: //; s/+/\ /g')
          VERSION=$(echo $VERSION_BUILD | cut -d' ' -f1)
          BUILD=$(echo $VERSION_BUILD | cut -d' ' -f2)
          NEW_BUILD=$((BUILD + 1))
          NEW_VERSION="$VERSION+$NEW_BUILD"
          BRANCH_NAME="version_bump_${VERSION}-${NEW_BUILD}"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          sed -i "s/version: $VERSION+$BUILD/version: $VERSION+$NEW_BUILD/" pubspec.yaml
          git add pubspec.yaml
          git commit -m "Increment version build number to $NEW_VERSION"
          echo "::set-output name=branch_name::$BRANCH_NAME"

      # Push the new branch
      - name: Push new branch
        run: |
          git checkout -b ${{ env.BRANCH_NAME }}
          git push --set-upstream origin ${{ env.BRANCH_NAME }}

      # Create a pull request using the dynamically fetched default branch as base
      - name: Create Pull Request
        id: create_pr
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const response = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '${{ env.BRANCH_NAME }}',
              head: '${{ env.BRANCH_NAME }}',
              base: '${{ steps.repo_info.outputs.result }}', # Use the fetched default branch
              body: 'This PR increments the app version build number.',
              draft: false,
            });
            if (response.status !== 201) {
              throw new Error('Failed to create pull request');
            }
            console.log('Pull request created:', response.data.html_url);
            return response.data.number;

      # Automatically merge the PR
      - name: Auto Merge PR
        if: steps.create_pr.outputs.result
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ steps.create_pr.outputs.result }},
              merge_method: 'merge',
            });
